<?php

/**
 * Baseusers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $uuid
 * @property string $username
 * @property string $lastname
 * @property string $firstname
 * @property string $email
 * @property string $password
 * @property string $hash
 * @property string $salt
 * @property integer $group_id
 * @property integer $party_id
 * @property timestamp $creation
 * 
 * @method integer   getId()        Returns the current record's "id" value
 * @method string    getUuid()      Returns the current record's "uuid" value
 * @method string    getUsername()  Returns the current record's "username" value
 * @method string    getLastname()  Returns the current record's "lastname" value
 * @method string    getFirstname() Returns the current record's "firstname" value
 * @method string    getEmail()     Returns the current record's "email" value
 * @method string    getPassword()  Returns the current record's "password" value
 * @method string    getHash()      Returns the current record's "hash" value
 * @method string    getSalt()      Returns the current record's "salt" value
 * @method integer   getGroupId()   Returns the current record's "group_id" value
 * @method integer   getPartyId()   Returns the current record's "party_id" value
 * @method timestamp getCreation()  Returns the current record's "creation" value
 * @method users     setId()        Sets the current record's "id" value
 * @method users     setUuid()      Sets the current record's "uuid" value
 * @method users     setUsername()  Sets the current record's "username" value
 * @method users     setLastname()  Sets the current record's "lastname" value
 * @method users     setFirstname() Sets the current record's "firstname" value
 * @method users     setEmail()     Sets the current record's "email" value
 * @method users     setPassword()  Sets the current record's "password" value
 * @method users     setHash()      Sets the current record's "hash" value
 * @method users     setSalt()      Sets the current record's "salt" value
 * @method users     setGroupId()   Sets the current record's "group_id" value
 * @method users     setPartyId()   Sets the current record's "party_id" value
 * @method users     setCreation()  Sets the current record's "creation" value
 * 
 * @package    Family-Quest
 * @subpackage model
 * @author     Ralph Dittrich kizetsu.rd@googlemail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseusers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unique' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('uuid', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('lastname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => false,
             'length' => 255,
             ));
        $this->hasColumn('firstname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => false,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => false,
             'length' => 255,
             ));
        $this->hasColumn('hash', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => false,
             'length' => 255,
             ));
        $this->hasColumn('salt', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => false,
             'length' => 255,
             ));
        $this->hasColumn('group_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => false,
             ));
        $this->hasColumn('party_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'unique' => false,
             ));
        $this->hasColumn('creation', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}